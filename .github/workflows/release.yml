name: Publish

on:
  push:
    branches: [master]

jobs:
  test:
    if: github.actor != 'renovate[bot]'
    uses: ./.github/workflows/test.yml

  meta:
    if: github.actor != 'renovate[bot]'
    name: Package Meta
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.packages.outputs.packages }}
      package-names: ${{ steps.names.outputs.names }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v5

      - name: Find packages
        id: packages
        run: | # shell
          packages=$(ls packages | jq -R -s -c 'split("\n")[:-1]')
          echo "packages=${packages}" >> $GITHUB_OUTPUT

      - name: Find package names
        id: names
        shell: python
        run: | # python
          import json
          import os
          output = {}
          for package in json.loads('${{ steps.packages.outputs.packages }}'):
            with open(f'packages/{package}/deno.json', 'r') as deno:
              output[package] = json.load(deno).get('name')
          with open(os.environ['GITHUB_OUTPUT'], 'a') as gho:
            gho.write(f'names={json.dumps(output)}')

  publish:
    name: Publish
    needs: [meta, test]
    runs-on: ubuntu-latest
    concurrency:
      group: release
    strategy:
      max-parallel: 1
      matrix:
        package: ${{ fromJSON(needs.meta.outputs.packages) }}
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - uses: denoland/setup-deno@v2
        with:
          deno-version-file: .dvmrc

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - working-directory: packages/${{ matrix.package }}
        run: npm i semantic-release-monorepo @semantic-release/exec @semantic-release/git

      - uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
        with:
          tag_format: ${{ fromJSON(needs.meta.outputs.package-names)[matrix.package] }}-v${version}
          working_directory: packages/${{ matrix.package }}
